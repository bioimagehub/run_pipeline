# ============================================================================
# Drift Correction Pipeline - Translation-Only Registration
# ============================================================================
# 
# This pipeline performs translation-only (XYZ shifts) drift correction using
# minimal implementations that wrap established libraries:
#   - phase_cross_correlation: Uses scikit-image (CPU) or cuCIM (GPU)
#   - stackreg_translation: Uses pystackreg (ImageJ TurboReg)
#
# ⚠️ TRANSLATION ONLY: No rotation, scaling, or non-linear transformations
#
# Usage:
#   .\run_pipeline.exe drift_correct.yaml
#
# Environment: drift_correct (includes scikit-image, pystackreg, cupy)
# ============================================================================

run:
- name: phase cross correlations with GPU on Test 2.
  environment: uv:drift_correct
  commands:
  - python: '%REPO%/standard_code/python/drift_correction.py'
  
  # ========== Input/Output Arguments ==========
  - --input-search-pattern: '%TEST_FOLDER%/drift/input/test_2/1_Meng_timecrop_template_rolled-t15.tif'  # Input file pattern (supports wildcards)
  - --output-folder: '%TEST_FOLDER%/drift/output/test_2'  # Output folder for corrected images
  - --output-suffix: '_phase_cor_gpu'  # Suffix to add to output filenames (default: _drift_corrected)
  
  # ========== Drift Correction Parameters ==========
  - --method: phase_cross_correlation  # Algorithm: phase_cross_correlation, stackreg_translation
  - --reference: previous  # Reference frame: first, previous
  - --reference-channel: 0  # Channel index for registration (0-based, default: 0)
  - --upsample-factor: 10  # Subpixel precision (10 = 0.1 pixel, 100 = 0.01 pixel)
  
  # ========== Bandpass Filter (DoG) ==========
  - --bandpass-low-sigma: 20  # Suppress structures < 20px (vesicles)
  - --bandpass-high-sigma: 100  # Preserve structures > 100px (cells)
  
  # ========== GPU Acceleration ==========
  - --gpu  # Uncomment to use GPU acceleration
- name: phase cross correlations with GPU on Test 2 with first frame as reference
  environment: uv:drift_correct
  commands:
  - python: '%REPO%/standard_code/python/drift_correction.py'
  
  # ========== Input/Output Arguments ==========
  - --input-search-pattern: '%TEST_FOLDER%/drift/input/test_2/1_Meng_timecrop_template_rolled-t15.tif'  # Input file pattern (supports wildcards)
  - --output-folder: '%TEST_FOLDER%/drift/output/test_2'  # Output folder for corrected images
  - --output-suffix: '_phase_cor_gpu_first'  # Suffix to add to output filenames (default: _drift_corrected)
  
  # ========== Drift Correction Parameters ==========
  - --method: phase_cross_correlation  # Algorithm: phase_cross_correlation, stackreg_translation
  - --reference: first  # Reference frame: first, previous
  - --reference-channel: 0  # Channel index for registration (0-based, default: 0)
  - --upsample-factor: 10  # Subpixel precision (10 = 0.1 pixel, 100 = 0.01 pixel)
  
  # ========== Bandpass Filter (DoG) ==========
  - --bandpass-low-sigma: 20  # Suppress structures < 20px (vesicles)
  - --bandpass-high-sigma: 100  # Preserve structures > 100px (cells)
  
  # ========== GPU Acceleration ==========
  - --gpu  # Uncomment to use GPU acceleration

- name: phase cross correlations with GPU on Meng 1 test with first frame as reference
  environment: uv:drift_correct
  commands:
  - python: '%REPO%/standard_code/python/drift_correction.py'
  
  # ========== Input/Output Arguments ==========
  - --input-search-pattern: '%TEST_FOLDER%/drift/input/test_3/1_Meng_timecrop.tif'  # Input file pattern (supports wildcards)
  - --output-folder: '%TEST_FOLDER%/drift/output/test_3'  # Output folder for corrected images
  - --output-suffix: '_phase_cor_gpu_first'  # Suffix to add to output filenames (default: _drift_corrected)
  
  # ========== Drift Correction Parameters ==========
  - --method: phase_cross_correlation  # Algorithm: phase_cross_correlation, stackreg_translation
  - --reference: first  # Reference frame: first, previous
  - --reference-channel: 0  # Channel index for registration (0-based, default: 0)
  - --upsample-factor: 5  # Subpixel precision (10 = 0.1 pixel, 100 = 0.01 pixel)
  
  # ========== Bandpass Filter (DoG) ==========
  - --bandpass-low-sigma: 30  # Suppress structures < 30px (vesicles)
  - --bandpass-high-sigma: 200  # Preserve structures > 200px (cells)

  # ========== GPU Acceleration ==========
  - --gpu  # Uncomment to use GPU acceleration
